
vardef base 

	s_trinity = //S1/STORAGE//1MON//
	s_trinity.capacity = 2447.6
	s_shasta  = //S4/STORAGE//1MON//
	s_folsom  = //S8/STORAGE//1MON//	
	nod_storage	= s_trinity + s_shasta + s_folsom
	nod_storage.units = TAF
	Nod_storage.capacity = 8000
	s_oroville = //S6/STORAGE//1MON//
    cvp_sanLuis = //S11/STORAGE//1MON//
	# test = //C699/FLOW-CHANNEL//1MON// 
					
end

vardef xyz 

	include base

	@c1 = //C400/FLOW-CHANNEL//1MON// 
	@c2 = //C157/FLOW-CHANNEL//1MON// 
	@c3 = //C504/FLOW-CHANNEL//1MON//
	@c4 = //C644/FLOW-CHANNEL//1MON// 
	# @ means temp variables to construct delta inflow 
	Delta_Inflow = c1 + C2 + c3 + 2*c4/2
	delta_inflow.units = CFS

end

vardef release_control
 
	# introduce an array, default values are zeros
	array x, y, z
	array Shasta_Ctrl{min_exports, Flood, keswick_mif, ncp_mif}

	D418       = //D418/FLOW-DELIVERY//1MON//
	S4         = //S4/STORAGE//1MON//
	S4LEVEL5DV = //S4LEVEL5DV/STORAGE-LEVEL//1MON//
	C5_EXC     = //C5_EXC/FLOW-EXCESS-INSTREAM//1MON//
	C129_EXC   = //C129_EXC/FLOW-EXCESS-INSTREAM//1MON//
	
	if D418-800<0.1  { 
		shasta_ctrl.min_exports = 1  }
	
	elseif S4-S4LEVEL5DV<0.1 {
		shasta_ctrl.flood=1 } 
		
	elseif C5_EXC<0.1 {
		shasta_ctrl.keswick_mif =1 }
		
	elseif C129_EXC<0.1 { 
		shasta_ctrl.ncp_mif = 1 }
	

end

vardef test_if
	
	#include xyz
	include Release_Control

end

vardef all
	
	include xyz
	include release_control

end

